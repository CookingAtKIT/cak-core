version: "3.8"
networks:
  cak-net:
    ipam:
      driver: default
      config:
        subnet: "172.16.238.0/29"
services:
  web:
    build: .
    hostname: cakCore
    environment:
      PORT: ${PORT}
      HOSTNAME: ${HOSTNAME}
      MONGO_ENDPOINT: ${MONGO_ENDPOINT}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_PATH: ${MONGO_PATH}
      MONGO_RETRY_WRITES: ${MONGO_RETRY_WRITES}
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_USE_SSL: ${MINIO_USE_SSL}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    ports:
      - "2999:2999"
    volumes:
    links:
      - mongo
      - minio
    networks:
      cak-net:
        - ipv4_address: "172.16.238.1"
  mongo:
    image: mongo
    hostname: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
    - mongoData:/data/db
  networks:
    cak-net:
      - ipv4_address: "172.16.238.2"
  minio:
    image: minio/minio
    hostname: minio
    volumes:
    - minioData:/data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      cak-net:
        - ipv4_address: "172.16.238.3"
volumes:
  minioData: {}
  mongoData: {}
